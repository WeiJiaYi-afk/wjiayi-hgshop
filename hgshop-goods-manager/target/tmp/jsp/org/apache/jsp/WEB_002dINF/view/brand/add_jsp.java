/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.20.v20190813
 * Generated at: 2020-04-08 12:48:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.brand;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("file:/C:/Users/魏嘉怡/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar", Long.valueOf(1583149581784L));
    _jspx_dependants.put("jar:file:/C:/Users/魏嘉怡/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("<form id=\"brankForm\">\r\n");
      out.write("\t\r\n");
      out.write("\t <div class=\"form-group row\">\r\n");
      out.write("\t    <label  class=\"col-sm-2 col-form-label\">品牌名称：</label>\r\n");
      out.write("\t    <div class=\"col-sm-10\">\r\n");
      out.write("\t      <input type=\"text\" name=\"name\"  class=\"form-control-plaintext\" \r\n");
      out.write("\t       value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${brand.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t </div>\r\n");
      out.write("\t <div class=\"form-group row\">\r\n");
      out.write("\t    <label  class=\"col-sm-2 col-form-label\">品牌首字母：</label>\r\n");
      out.write("\t    <div class=\"col-sm-10\">\r\n");
      out.write("\t      <input type=\"text\" name=\"firstChar\"  class=\"form-control-plaintext\" \r\n");
      out.write("\t       value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${brand.firstChar}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t </div>\r\n");
      out.write("\r\n");
      out.write("<!-- \t<div class=\"form-group row\">\r\n");
      out.write("\t  <button type=\"button\" class=\"btn btn-success\" onclick=\"addOption()\" >添加属性</button>\r\n");
      out.write("\t</div> -->\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</form> \r\n");
      out.write("<button type=\"button\" class=\"btn btn-success\" onclick=\"commitData()\" >添加</button>\r\n");
      out.write("   \r\n");
      out.write("<script>\r\n");
      out.write("\t\r\n");
      out.write("/* \tvar maxIndex =  ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${spec.optionList.size()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\tfunction remove(obj){\r\n");
      out.write("\t\tobj.parent().parent().remove();\r\n");
      out.write("\t}  */\r\n");
      out.write("\t\r\n");
      out.write("\tfunction commitData(){\r\n");
      out.write("\t \r\n");
      out.write("\t  var formData= new FormData($(\"#brankForm\")[0])\r\n");
      out.write("\t  $.ajax({url:\"/brand/add\",\r\n");
      out.write("\t\t//  dataType:\"json\",\r\n");
      out.write("\t\t  data:formData,\r\n");
      out.write("\t\t  // 让jQuery 不要再提交数据之前进行处理\r\n");
      out.write("\t\t  processData : false,\r\n");
      out.write("\t\t  // 提交的数据不能加消息头\r\n");
      out.write("\t\t  contentType : false,\r\n");
      out.write("\t\t  // 提交的方式 \r\n");
      out.write("\t\t  type:\"post\",\r\n");
      out.write("\t\t  // 成功后的回调函数\r\n");
      out.write("\t\t  success:function(data){\r\n");
      out.write("\t\t\t  //提交成功以后，要书信页面\r\n");
      out.write("\t\t\t  if(data==\"success\"){\r\n");
      out.write("\t\t\t\t  alert('成功')\r\n");
      out.write("\t\t\t\t  $(\"#workcontent\").load('/brand/list');\r\n");
      out.write("\t\t\t\t  $(\"#workTitle\").html(\"规格管理\");\r\n");
      out.write("\t\t\t  }else{\r\n");
      out.write("\t\t\t\t  alert(data);\r\n");
      out.write("\t\t\t  }\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("/* \t\r\n");
      out.write("\tfunction addOption(){\r\n");
      out.write("\t\tvar str = '<div class=\"form-row\">' +\r\n");
      out.write("\t    '<div class=\"form-group col-md-5\">' +\r\n");
      out.write("\t     ' <label>规格属性值</label>' +\r\n");
      out.write("\t     ' <input type=\"text\" name=\"optionList['+maxIndex+'].optionName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${option.optionName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"form-control\">' +\r\n");
      out.write("\t    '</div>' +\r\n");
      out.write("\t    '<div class=\"form-group col-md-5\">' +\r\n");
      out.write("\t    '  <label for=\"inputPassword4\">排序</label>' +\r\n");
      out.write("\t    '  <input type=\"number\" name=\"optionList['+maxIndex+'].orders\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${option.orders}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"form-control\" >' +\r\n");
      out.write("\t    '</div>' +\r\n");
      out.write("\t    '<div class=\"form-group col-md-2\">' +\r\n");
      out.write("\t    '    <label for=\"inputPassword4\">&nbsp;</label>' +\r\n");
      out.write("\t    ' \t<input type=\"button\" value=\"删除\" class=\"btn btn-danger\" onclick=\"remove($(this))\">' +\r\n");
      out.write("\t    '</div>' +\r\n");
      out.write("    '</div>' \r\n");
      out.write("\t    maxIndex=maxIndex+1;\r\n");
      out.write("      $('#specForm').append(str);\r\n");
      out.write("\t} */\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("    ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
